/*
 * Mailchimp Transactional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.model.PostRejectsList200ResponseInnerSender;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * the information for each rejection  entry
 */
@JsonPropertyOrder({
  PostRejectsList200ResponseInner.JSON_PROPERTY_EMAIL,
  PostRejectsList200ResponseInner.JSON_PROPERTY_REASON,
  PostRejectsList200ResponseInner.JSON_PROPERTY_DETAIL,
  PostRejectsList200ResponseInner.JSON_PROPERTY_CREATED_AT,
  PostRejectsList200ResponseInner.JSON_PROPERTY_LAST_EVENT_AT,
  PostRejectsList200ResponseInner.JSON_PROPERTY_EXPIRES_AT,
  PostRejectsList200ResponseInner.JSON_PROPERTY_EXPIRED,
  PostRejectsList200ResponseInner.JSON_PROPERTY_SENDER,
  PostRejectsList200ResponseInner.JSON_PROPERTY_SUBACCOUNT
})
@JsonTypeName("postRejectsList_200_response_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-19T14:58:48.420021+02:00[Europe/Tallinn]")
public class PostRejectsList200ResponseInner {
  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_REASON = "reason";
  private String reason;

  public static final String JSON_PROPERTY_DETAIL = "detail";
  private String detail;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_LAST_EVENT_AT = "last_event_at";
  private OffsetDateTime lastEventAt;

  public static final String JSON_PROPERTY_EXPIRES_AT = "expires_at";
  private OffsetDateTime expiresAt;

  public static final String JSON_PROPERTY_EXPIRED = "expired";
  private Boolean expired;

  public static final String JSON_PROPERTY_SENDER = "sender";
  private PostRejectsList200ResponseInnerSender sender;

  public static final String JSON_PROPERTY_SUBACCOUNT = "subaccount";
  private String subaccount;

  public PostRejectsList200ResponseInner() {
  }

  public PostRejectsList200ResponseInner email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * the email that is blocked
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public PostRejectsList200ResponseInner reason(String reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * the type of event (hard-bounce, soft-bounce, spam, unsub, custom) that caused this rejection
   * @return reason
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReason() {
    return reason;
  }


  @JsonProperty(JSON_PROPERTY_REASON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReason(String reason) {
    this.reason = reason;
  }


  public PostRejectsList200ResponseInner detail(String detail) {
    
    this.detail = detail;
    return this;
  }

   /**
   * extended details about the event, such as the SMTP diagnostic for bounces or the comment for manually-created rejections
   * @return detail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDetail() {
    return detail;
  }


  @JsonProperty(JSON_PROPERTY_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDetail(String detail) {
    this.detail = detail;
  }


  public PostRejectsList200ResponseInner createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * when the email was added to the denylist
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public PostRejectsList200ResponseInner lastEventAt(OffsetDateTime lastEventAt) {
    
    this.lastEventAt = lastEventAt;
    return this;
  }

   /**
   * the timestamp of the most recent event that either created or renewed this rejection
   * @return lastEventAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_EVENT_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastEventAt() {
    return lastEventAt;
  }


  @JsonProperty(JSON_PROPERTY_LAST_EVENT_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastEventAt(OffsetDateTime lastEventAt) {
    this.lastEventAt = lastEventAt;
  }


  public PostRejectsList200ResponseInner expiresAt(OffsetDateTime expiresAt) {
    
    this.expiresAt = expiresAt;
    return this;
  }

   /**
   * when the denylist entry will expire (this may be in the past)
   * @return expiresAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getExpiresAt() {
    return expiresAt;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiresAt(OffsetDateTime expiresAt) {
    this.expiresAt = expiresAt;
  }


  public PostRejectsList200ResponseInner expired(Boolean expired) {
    
    this.expired = expired;
    return this;
  }

   /**
   * whether the denylist entry has expired
   * @return expired
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getExpired() {
    return expired;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpired(Boolean expired) {
    this.expired = expired;
  }


  public PostRejectsList200ResponseInner sender(PostRejectsList200ResponseInnerSender sender) {
    
    this.sender = sender;
    return this;
  }

   /**
   * Get sender
   * @return sender
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostRejectsList200ResponseInnerSender getSender() {
    return sender;
  }


  @JsonProperty(JSON_PROPERTY_SENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSender(PostRejectsList200ResponseInnerSender sender) {
    this.sender = sender;
  }


  public PostRejectsList200ResponseInner subaccount(String subaccount) {
    
    this.subaccount = subaccount;
    return this;
  }

   /**
   * the subaccount that this denylist entry applies to, or null if none.
   * @return subaccount
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubaccount() {
    return subaccount;
  }


  @JsonProperty(JSON_PROPERTY_SUBACCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubaccount(String subaccount) {
    this.subaccount = subaccount;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostRejectsList200ResponseInner postRejectsList200ResponseInner = (PostRejectsList200ResponseInner) o;
    return Objects.equals(this.email, postRejectsList200ResponseInner.email) &&
        Objects.equals(this.reason, postRejectsList200ResponseInner.reason) &&
        Objects.equals(this.detail, postRejectsList200ResponseInner.detail) &&
        Objects.equals(this.createdAt, postRejectsList200ResponseInner.createdAt) &&
        Objects.equals(this.lastEventAt, postRejectsList200ResponseInner.lastEventAt) &&
        Objects.equals(this.expiresAt, postRejectsList200ResponseInner.expiresAt) &&
        Objects.equals(this.expired, postRejectsList200ResponseInner.expired) &&
        Objects.equals(this.sender, postRejectsList200ResponseInner.sender) &&
        Objects.equals(this.subaccount, postRejectsList200ResponseInner.subaccount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, reason, detail, createdAt, lastEventAt, expiresAt, expired, sender, subaccount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostRejectsList200ResponseInner {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    detail: ").append(toIndentedString(detail)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastEventAt: ").append(toIndentedString(lastEventAt)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    expired: ").append(toIndentedString(expired)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    subaccount: ").append(toIndentedString(subaccount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

