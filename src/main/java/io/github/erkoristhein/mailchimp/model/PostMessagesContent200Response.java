/*
 * Mailchimp Transactional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.model.PostMessagesContent200ResponseAttachmentsInner;
import io.github.erkoristhein.mailchimp.model.PostMessagesContent200ResponseTo;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * the content of the message
 */
@JsonPropertyOrder({
  PostMessagesContent200Response.JSON_PROPERTY_TS,
  PostMessagesContent200Response.JSON_PROPERTY_ID,
  PostMessagesContent200Response.JSON_PROPERTY_FROM_EMAIL,
  PostMessagesContent200Response.JSON_PROPERTY_FROM_NAME,
  PostMessagesContent200Response.JSON_PROPERTY_SUBJECT,
  PostMessagesContent200Response.JSON_PROPERTY_TO,
  PostMessagesContent200Response.JSON_PROPERTY_TAGS,
  PostMessagesContent200Response.JSON_PROPERTY_HEADERS,
  PostMessagesContent200Response.JSON_PROPERTY_TEXT,
  PostMessagesContent200Response.JSON_PROPERTY_HTML,
  PostMessagesContent200Response.JSON_PROPERTY_ATTACHMENTS
})
@JsonTypeName("postMessagesContent_200_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-19T14:58:48.420021+02:00[Europe/Tallinn]")
public class PostMessagesContent200Response {
  public static final String JSON_PROPERTY_TS = "ts";
  private Integer ts;

  public static final String JSON_PROPERTY_ID = "_id";
  private String id;

  public static final String JSON_PROPERTY_FROM_EMAIL = "from_email";
  private String fromEmail;

  public static final String JSON_PROPERTY_FROM_NAME = "from_name";
  private String fromName;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private String subject;

  public static final String JSON_PROPERTY_TO = "to";
  private PostMessagesContent200ResponseTo to;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<String> tags;

  public static final String JSON_PROPERTY_HEADERS = "headers";
  private Object headers;

  public static final String JSON_PROPERTY_TEXT = "text";
  private String text;

  public static final String JSON_PROPERTY_HTML = "html";
  private String html;

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  private List<PostMessagesContent200ResponseAttachmentsInner> attachments;

  public PostMessagesContent200Response() {
  }

  public PostMessagesContent200Response ts(Integer ts) {
    
    this.ts = ts;
    return this;
  }

   /**
   * the Unix timestamp from when this message was sent
   * @return ts
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTs() {
    return ts;
  }


  @JsonProperty(JSON_PROPERTY_TS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTs(Integer ts) {
    this.ts = ts;
  }


  public PostMessagesContent200Response id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * the message&#39;s unique id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public PostMessagesContent200Response fromEmail(String fromEmail) {
    
    this.fromEmail = fromEmail;
    return this;
  }

   /**
   * the email address of the sender
   * @return fromEmail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFromEmail() {
    return fromEmail;
  }


  @JsonProperty(JSON_PROPERTY_FROM_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromEmail(String fromEmail) {
    this.fromEmail = fromEmail;
  }


  public PostMessagesContent200Response fromName(String fromName) {
    
    this.fromName = fromName;
    return this;
  }

   /**
   * the alias of the sender (if any)
   * @return fromName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FROM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFromName() {
    return fromName;
  }


  @JsonProperty(JSON_PROPERTY_FROM_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFromName(String fromName) {
    this.fromName = fromName;
  }


  public PostMessagesContent200Response subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * the message&#39;s subject line
   * @return subject
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubject(String subject) {
    this.subject = subject;
  }


  public PostMessagesContent200Response to(PostMessagesContent200ResponseTo to) {
    
    this.to = to;
    return this;
  }

   /**
   * Get to
   * @return to
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostMessagesContent200ResponseTo getTo() {
    return to;
  }


  @JsonProperty(JSON_PROPERTY_TO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTo(PostMessagesContent200ResponseTo to) {
    this.to = to;
  }


  public PostMessagesContent200Response tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public PostMessagesContent200Response addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * list of tags on this message
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public PostMessagesContent200Response headers(Object headers) {
    
    this.headers = headers;
    return this;
  }

   /**
   * the key-value pairs of the custom MIME headers for the message&#39;s main document
   * @return headers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getHeaders() {
    return headers;
  }


  @JsonProperty(JSON_PROPERTY_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHeaders(Object headers) {
    this.headers = headers;
  }


  public PostMessagesContent200Response text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * the text part of the message, if any
   * @return text
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setText(String text) {
    this.text = text;
  }


  public PostMessagesContent200Response html(String html) {
    
    this.html = html;
    return this;
  }

   /**
   * the HTML part of the message, if any
   * @return html
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HTML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHtml() {
    return html;
  }


  @JsonProperty(JSON_PROPERTY_HTML)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHtml(String html) {
    this.html = html;
  }


  public PostMessagesContent200Response attachments(List<PostMessagesContent200ResponseAttachmentsInner> attachments) {
    
    this.attachments = attachments;
    return this;
  }

  public PostMessagesContent200Response addAttachmentsItem(PostMessagesContent200ResponseAttachmentsInner attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * an array of any attachments that can be found in the message
   * @return attachments
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PostMessagesContent200ResponseAttachmentsInner> getAttachments() {
    return attachments;
  }


  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAttachments(List<PostMessagesContent200ResponseAttachmentsInner> attachments) {
    this.attachments = attachments;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostMessagesContent200Response postMessagesContent200Response = (PostMessagesContent200Response) o;
    return Objects.equals(this.ts, postMessagesContent200Response.ts) &&
        Objects.equals(this.id, postMessagesContent200Response.id) &&
        Objects.equals(this.fromEmail, postMessagesContent200Response.fromEmail) &&
        Objects.equals(this.fromName, postMessagesContent200Response.fromName) &&
        Objects.equals(this.subject, postMessagesContent200Response.subject) &&
        Objects.equals(this.to, postMessagesContent200Response.to) &&
        Objects.equals(this.tags, postMessagesContent200Response.tags) &&
        Objects.equals(this.headers, postMessagesContent200Response.headers) &&
        Objects.equals(this.text, postMessagesContent200Response.text) &&
        Objects.equals(this.html, postMessagesContent200Response.html) &&
        Objects.equals(this.attachments, postMessagesContent200Response.attachments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ts, id, fromEmail, fromName, subject, to, tags, headers, text, html, attachments);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostMessagesContent200Response {\n");
    sb.append("    ts: ").append(toIndentedString(ts)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    fromEmail: ").append(toIndentedString(fromEmail)).append("\n");
    sb.append("    fromName: ").append(toIndentedString(fromName)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    html: ").append(toIndentedString(html)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

