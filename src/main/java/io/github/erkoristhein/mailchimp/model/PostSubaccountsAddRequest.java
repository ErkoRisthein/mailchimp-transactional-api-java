/*
 * Mailchimp Transactional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostSubaccountsAddRequest
 */
@JsonPropertyOrder({
  PostSubaccountsAddRequest.JSON_PROPERTY_KEY,
  PostSubaccountsAddRequest.JSON_PROPERTY_ID,
  PostSubaccountsAddRequest.JSON_PROPERTY_NAME,
  PostSubaccountsAddRequest.JSON_PROPERTY_NOTES,
  PostSubaccountsAddRequest.JSON_PROPERTY_CUSTOM_QUOTA
})
@JsonTypeName("postSubaccountsAdd_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-19T14:58:48.420021+02:00[Europe/Tallinn]")
public class PostSubaccountsAddRequest {
  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NOTES = "notes";
  private String notes;

  public static final String JSON_PROPERTY_CUSTOM_QUOTA = "custom_quota";
  private Integer customQuota;

  public PostSubaccountsAddRequest() {
  }

  public PostSubaccountsAddRequest key(String key) {
    
    this.key = key;
    return this;
  }

   /**
   * a valid api key
   * @return key
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKey(String key) {
    this.key = key;
  }


  public PostSubaccountsAddRequest id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * a unique identifier for the subaccount to be used in sending calls
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(String id) {
    this.id = id;
  }


  public PostSubaccountsAddRequest name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * an optional display name to further identify the subaccount
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public PostSubaccountsAddRequest notes(String notes) {
    
    this.notes = notes;
    return this;
  }

   /**
   * optional extra text to associate with the subaccount
   * @return notes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNotes() {
    return notes;
  }


  @JsonProperty(JSON_PROPERTY_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNotes(String notes) {
    this.notes = notes;
  }


  public PostSubaccountsAddRequest customQuota(Integer customQuota) {
    
    this.customQuota = customQuota;
    return this;
  }

   /**
   * an optional manual hourly quota for the subaccount. If not specified, Mandrill will manage this based on reputation
   * minimum: 0
   * @return customQuota
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CUSTOM_QUOTA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getCustomQuota() {
    return customQuota;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_QUOTA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomQuota(Integer customQuota) {
    this.customQuota = customQuota;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostSubaccountsAddRequest postSubaccountsAddRequest = (PostSubaccountsAddRequest) o;
    return Objects.equals(this.key, postSubaccountsAddRequest.key) &&
        Objects.equals(this.id, postSubaccountsAddRequest.id) &&
        Objects.equals(this.name, postSubaccountsAddRequest.name) &&
        Objects.equals(this.notes, postSubaccountsAddRequest.notes) &&
        Objects.equals(this.customQuota, postSubaccountsAddRequest.customQuota);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, id, name, notes, customQuota);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostSubaccountsAddRequest {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    customQuota: ").append(toIndentedString(customQuota)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

