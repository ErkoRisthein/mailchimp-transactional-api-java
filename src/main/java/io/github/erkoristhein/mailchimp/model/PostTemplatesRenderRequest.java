/*
 * Mailchimp Transactional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.model.PostTemplatesRenderRequestMergeVarsInner;
import io.github.erkoristhein.mailchimp.model.PostTemplatesRenderRequestTemplateContentInner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PostTemplatesRenderRequest
 */
@JsonPropertyOrder({
  PostTemplatesRenderRequest.JSON_PROPERTY_KEY,
  PostTemplatesRenderRequest.JSON_PROPERTY_TEMPLATE_NAME,
  PostTemplatesRenderRequest.JSON_PROPERTY_TEMPLATE_CONTENT,
  PostTemplatesRenderRequest.JSON_PROPERTY_MERGE_VARS
})
@JsonTypeName("postTemplatesRender_request")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-19T14:58:48.420021+02:00[Europe/Tallinn]")
public class PostTemplatesRenderRequest {
  public static final String JSON_PROPERTY_KEY = "key";
  private String key;

  public static final String JSON_PROPERTY_TEMPLATE_NAME = "template_name";
  private String templateName;

  public static final String JSON_PROPERTY_TEMPLATE_CONTENT = "template_content";
  private List<PostTemplatesRenderRequestTemplateContentInner> templateContent = new ArrayList<>();

  public static final String JSON_PROPERTY_MERGE_VARS = "merge_vars";
  private List<PostTemplatesRenderRequestMergeVarsInner> mergeVars;

  public PostTemplatesRenderRequest() {
  }

  public PostTemplatesRenderRequest key(String key) {
    
    this.key = key;
    return this;
  }

   /**
   * a valid api key
   * @return key
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getKey() {
    return key;
  }


  @JsonProperty(JSON_PROPERTY_KEY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setKey(String key) {
    this.key = key;
  }


  public PostTemplatesRenderRequest templateName(String templateName) {
    
    this.templateName = templateName;
    return this;
  }

   /**
   * the immutable name of a template that exists in the user&#39;s account
   * @return templateName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEMPLATE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTemplateName() {
    return templateName;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }


  public PostTemplatesRenderRequest templateContent(List<PostTemplatesRenderRequestTemplateContentInner> templateContent) {
    
    this.templateContent = templateContent;
    return this;
  }

  public PostTemplatesRenderRequest addTemplateContentItem(PostTemplatesRenderRequestTemplateContentInner templateContentItem) {
    if (this.templateContent == null) {
      this.templateContent = new ArrayList<>();
    }
    this.templateContent.add(templateContentItem);
    return this;
  }

   /**
   * an array of template content to render. Each item in the array should be a struct with two keys - name: the name of the content block to set the content for, and content: the actual content to put into the block
   * @return templateContent
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEMPLATE_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<PostTemplatesRenderRequestTemplateContentInner> getTemplateContent() {
    return templateContent;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE_CONTENT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTemplateContent(List<PostTemplatesRenderRequestTemplateContentInner> templateContent) {
    this.templateContent = templateContent;
  }


  public PostTemplatesRenderRequest mergeVars(List<PostTemplatesRenderRequestMergeVarsInner> mergeVars) {
    
    this.mergeVars = mergeVars;
    return this;
  }

  public PostTemplatesRenderRequest addMergeVarsItem(PostTemplatesRenderRequestMergeVarsInner mergeVarsItem) {
    if (this.mergeVars == null) {
      this.mergeVars = new ArrayList<>();
    }
    this.mergeVars.add(mergeVarsItem);
    return this;
  }

   /**
   * optional merge variables to use for injecting merge field content. If this is not provided, no merge fields will be replaced.
   * @return mergeVars
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MERGE_VARS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PostTemplatesRenderRequestMergeVarsInner> getMergeVars() {
    return mergeVars;
  }


  @JsonProperty(JSON_PROPERTY_MERGE_VARS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMergeVars(List<PostTemplatesRenderRequestMergeVarsInner> mergeVars) {
    this.mergeVars = mergeVars;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostTemplatesRenderRequest postTemplatesRenderRequest = (PostTemplatesRenderRequest) o;
    return Objects.equals(this.key, postTemplatesRenderRequest.key) &&
        Objects.equals(this.templateName, postTemplatesRenderRequest.templateName) &&
        Objects.equals(this.templateContent, postTemplatesRenderRequest.templateContent) &&
        Objects.equals(this.mergeVars, postTemplatesRenderRequest.mergeVars);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, templateName, templateContent, mergeVars);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostTemplatesRenderRequest {\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    templateContent: ").append(toIndentedString(templateContent)).append("\n");
    sb.append("    mergeVars: ").append(toIndentedString(mergeVars)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

