/*
 * Mailchimp Transactional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * information about the ip&#39;s warmup status
 */
@JsonPropertyOrder({
  PostIpsList200ResponseInnerWarmup.JSON_PROPERTY_WARMING_UP,
  PostIpsList200ResponseInnerWarmup.JSON_PROPERTY_START_AT,
  PostIpsList200ResponseInnerWarmup.JSON_PROPERTY_END_AT
})
@JsonTypeName("postIpsList_200_response_inner_warmup")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-19T14:58:48.420021+02:00[Europe/Tallinn]")
public class PostIpsList200ResponseInnerWarmup {
  public static final String JSON_PROPERTY_WARMING_UP = "warming_up";
  private Boolean warmingUp;

  public static final String JSON_PROPERTY_START_AT = "start_at";
  private OffsetDateTime startAt;

  public static final String JSON_PROPERTY_END_AT = "end_at";
  private OffsetDateTime endAt;

  public PostIpsList200ResponseInnerWarmup() {
  }

  public PostIpsList200ResponseInnerWarmup warmingUp(Boolean warmingUp) {
    
    this.warmingUp = warmingUp;
    return this;
  }

   /**
   * whether the ip is currently in warmup mode
   * @return warmingUp
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WARMING_UP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getWarmingUp() {
    return warmingUp;
  }


  @JsonProperty(JSON_PROPERTY_WARMING_UP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWarmingUp(Boolean warmingUp) {
    this.warmingUp = warmingUp;
  }


  public PostIpsList200ResponseInnerWarmup startAt(OffsetDateTime startAt) {
    
    this.startAt = startAt;
    return this;
  }

   /**
   * the start time for the warmup process as a UTC string in YYYY-MM-DD HH:MM:SS format
   * @return startAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStartAt() {
    return startAt;
  }


  @JsonProperty(JSON_PROPERTY_START_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStartAt(OffsetDateTime startAt) {
    this.startAt = startAt;
  }


  public PostIpsList200ResponseInnerWarmup endAt(OffsetDateTime endAt) {
    
    this.endAt = endAt;
    return this;
  }

   /**
   * the end date and time for the warmup process as a UTC string in YYYY-MM-DD HH:MM:SS format
   * @return endAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEndAt() {
    return endAt;
  }


  @JsonProperty(JSON_PROPERTY_END_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEndAt(OffsetDateTime endAt) {
    this.endAt = endAt;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostIpsList200ResponseInnerWarmup postIpsList200ResponseInnerWarmup = (PostIpsList200ResponseInnerWarmup) o;
    return Objects.equals(this.warmingUp, postIpsList200ResponseInnerWarmup.warmingUp) &&
        Objects.equals(this.startAt, postIpsList200ResponseInnerWarmup.startAt) &&
        Objects.equals(this.endAt, postIpsList200ResponseInnerWarmup.endAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(warmingUp, startAt, endAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostIpsList200ResponseInnerWarmup {\n");
    sb.append("    warmingUp: ").append(toIndentedString(warmingUp)).append("\n");
    sb.append("    startAt: ").append(toIndentedString(startAt)).append("\n");
    sb.append("    endAt: ").append(toIndentedString(endAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

