/*
 * Mailchimp Transactional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.model.PostSendersDomains200ResponseInnerDkim;
import io.github.erkoristhein.mailchimp.model.PostSendersDomains200ResponseInnerSpf;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * information about the domain
 */
@JsonPropertyOrder({
  PostSendersAddDomain200Response.JSON_PROPERTY_DOMAIN,
  PostSendersAddDomain200Response.JSON_PROPERTY_CREATED_AT,
  PostSendersAddDomain200Response.JSON_PROPERTY_LAST_TESTED_AT,
  PostSendersAddDomain200Response.JSON_PROPERTY_SPF,
  PostSendersAddDomain200Response.JSON_PROPERTY_DKIM,
  PostSendersAddDomain200Response.JSON_PROPERTY_VERIFIED_AT,
  PostSendersAddDomain200Response.JSON_PROPERTY_VALID_SIGNING,
  PostSendersAddDomain200Response.JSON_PROPERTY_VERIFY_TXT_KEY
})
@JsonTypeName("postSendersAddDomain_200_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-19T14:58:48.420021+02:00[Europe/Tallinn]")
public class PostSendersAddDomain200Response {
  public static final String JSON_PROPERTY_DOMAIN = "domain";
  private String domain;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_LAST_TESTED_AT = "last_tested_at";
  private OffsetDateTime lastTestedAt;

  public static final String JSON_PROPERTY_SPF = "spf";
  private PostSendersDomains200ResponseInnerSpf spf;

  public static final String JSON_PROPERTY_DKIM = "dkim";
  private PostSendersDomains200ResponseInnerDkim dkim;

  public static final String JSON_PROPERTY_VERIFIED_AT = "verified_at";
  private OffsetDateTime verifiedAt;

  public static final String JSON_PROPERTY_VALID_SIGNING = "valid_signing";
  private Boolean validSigning;

  public static final String JSON_PROPERTY_VERIFY_TXT_KEY = "verify_txt_key";
  private String verifyTxtKey;

  public PostSendersAddDomain200Response() {
  }

  public PostSendersAddDomain200Response domain(String domain) {
    
    this.domain = domain;
    return this;
  }

   /**
   * the sender domain name
   * @return domain
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDomain() {
    return domain;
  }


  @JsonProperty(JSON_PROPERTY_DOMAIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDomain(String domain) {
    this.domain = domain;
  }


  public PostSendersAddDomain200Response createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * the date and time that the sending domain was first seen as a UTC string in YYYY-MM-DD HH:MM:SS format
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public PostSendersAddDomain200Response lastTestedAt(OffsetDateTime lastTestedAt) {
    
    this.lastTestedAt = lastTestedAt;
    return this;
  }

   /**
   * when the domain&#39;s DNS settings were last tested as a UTC string in YYYY-MM-DD HH:MM:SS format
   * @return lastTestedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_TESTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastTestedAt() {
    return lastTestedAt;
  }


  @JsonProperty(JSON_PROPERTY_LAST_TESTED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastTestedAt(OffsetDateTime lastTestedAt) {
    this.lastTestedAt = lastTestedAt;
  }


  public PostSendersAddDomain200Response spf(PostSendersDomains200ResponseInnerSpf spf) {
    
    this.spf = spf;
    return this;
  }

   /**
   * Get spf
   * @return spf
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SPF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSendersDomains200ResponseInnerSpf getSpf() {
    return spf;
  }


  @JsonProperty(JSON_PROPERTY_SPF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSpf(PostSendersDomains200ResponseInnerSpf spf) {
    this.spf = spf;
  }


  public PostSendersAddDomain200Response dkim(PostSendersDomains200ResponseInnerDkim dkim) {
    
    this.dkim = dkim;
    return this;
  }

   /**
   * Get dkim
   * @return dkim
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DKIM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PostSendersDomains200ResponseInnerDkim getDkim() {
    return dkim;
  }


  @JsonProperty(JSON_PROPERTY_DKIM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDkim(PostSendersDomains200ResponseInnerDkim dkim) {
    this.dkim = dkim;
  }


  public PostSendersAddDomain200Response verifiedAt(OffsetDateTime verifiedAt) {
    
    this.verifiedAt = verifiedAt;
    return this;
  }

   /**
   * if the domain has been verified, this indicates when that verification occurred as a UTC string in YYYY-MM-DD HH:MM:SS format
   * @return verifiedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFIED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getVerifiedAt() {
    return verifiedAt;
  }


  @JsonProperty(JSON_PROPERTY_VERIFIED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerifiedAt(OffsetDateTime verifiedAt) {
    this.verifiedAt = verifiedAt;
  }


  public PostSendersAddDomain200Response validSigning(Boolean validSigning) {
    
    this.validSigning = validSigning;
    return this;
  }

   /**
   * whether this domain can be used to authenticate mail, either for itself or as a custom signing domain. If this is false but spf and dkim are both valid, you will need to verify the domain before using it to authenticate mail
   * @return validSigning
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_SIGNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getValidSigning() {
    return validSigning;
  }


  @JsonProperty(JSON_PROPERTY_VALID_SIGNING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidSigning(Boolean validSigning) {
    this.validSigning = validSigning;
  }


  public PostSendersAddDomain200Response verifyTxtKey(String verifyTxtKey) {
    
    this.verifyTxtKey = verifyTxtKey;
    return this;
  }

   /**
   * a unique key used to verify a domain by adding a TXT record. Append this key to &#39;mandrill_verify.&#39; and add it to your domain&#39;s TXT records to verify
   * @return verifyTxtKey
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERIFY_TXT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVerifyTxtKey() {
    return verifyTxtKey;
  }


  @JsonProperty(JSON_PROPERTY_VERIFY_TXT_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVerifyTxtKey(String verifyTxtKey) {
    this.verifyTxtKey = verifyTxtKey;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostSendersAddDomain200Response postSendersAddDomain200Response = (PostSendersAddDomain200Response) o;
    return Objects.equals(this.domain, postSendersAddDomain200Response.domain) &&
        Objects.equals(this.createdAt, postSendersAddDomain200Response.createdAt) &&
        Objects.equals(this.lastTestedAt, postSendersAddDomain200Response.lastTestedAt) &&
        Objects.equals(this.spf, postSendersAddDomain200Response.spf) &&
        Objects.equals(this.dkim, postSendersAddDomain200Response.dkim) &&
        Objects.equals(this.verifiedAt, postSendersAddDomain200Response.verifiedAt) &&
        Objects.equals(this.validSigning, postSendersAddDomain200Response.validSigning) &&
        Objects.equals(this.verifyTxtKey, postSendersAddDomain200Response.verifyTxtKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(domain, createdAt, lastTestedAt, spf, dkim, verifiedAt, validSigning, verifyTxtKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostSendersAddDomain200Response {\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastTestedAt: ").append(toIndentedString(lastTestedAt)).append("\n");
    sb.append("    spf: ").append(toIndentedString(spf)).append("\n");
    sb.append("    dkim: ").append(toIndentedString(dkim)).append("\n");
    sb.append("    verifiedAt: ").append(toIndentedString(verifiedAt)).append("\n");
    sb.append("    validSigning: ").append(toIndentedString(validSigning)).append("\n");
    sb.append("    verifyTxtKey: ").append(toIndentedString(verifyTxtKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

