/*
 * Mailchimp Transactional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * details about the domain&#39;s SPF record
 */
@JsonPropertyOrder({
  PostSendersDomains200ResponseInnerSpf.JSON_PROPERTY_VALID,
  PostSendersDomains200ResponseInnerSpf.JSON_PROPERTY_VALID_AFTER,
  PostSendersDomains200ResponseInnerSpf.JSON_PROPERTY_ERROR
})
@JsonTypeName("postSendersDomains_200_response_inner_spf")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-19T14:58:48.420021+02:00[Europe/Tallinn]")
public class PostSendersDomains200ResponseInnerSpf {
  public static final String JSON_PROPERTY_VALID = "valid";
  private Boolean valid;

  public static final String JSON_PROPERTY_VALID_AFTER = "valid_after";
  private OffsetDateTime validAfter;

  public static final String JSON_PROPERTY_ERROR = "error";
  private String error;

  public PostSendersDomains200ResponseInnerSpf() {
  }

  public PostSendersDomains200ResponseInnerSpf valid(Boolean valid) {
    
    this.valid = valid;
    return this;
  }

   /**
   * whether the domain&#39;s SPF record is valid for use with Mandrill
   * @return valid
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getValid() {
    return valid;
  }


  @JsonProperty(JSON_PROPERTY_VALID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValid(Boolean valid) {
    this.valid = valid;
  }


  public PostSendersDomains200ResponseInnerSpf validAfter(OffsetDateTime validAfter) {
    
    this.validAfter = validAfter;
    return this;
  }

   /**
   * when the domain&#39;s SPF record will be considered valid for use with Mandrill as a UTC string in YYYY-MM-DD HH:MM:SS format. If set, this indicates that the record is valid now, but was previously invalid, and Mandrill will wait until the record&#39;s TTL elapses to start using it.
   * @return validAfter
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VALID_AFTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getValidAfter() {
    return validAfter;
  }


  @JsonProperty(JSON_PROPERTY_VALID_AFTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setValidAfter(OffsetDateTime validAfter) {
    this.validAfter = validAfter;
  }


  public PostSendersDomains200ResponseInnerSpf error(String error) {
    
    this.error = error;
    return this;
  }

   /**
   * an error describing the spf record, or null if the record is correct
   * @return error
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(String error) {
    this.error = error;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostSendersDomains200ResponseInnerSpf postSendersDomains200ResponseInnerSpf = (PostSendersDomains200ResponseInnerSpf) o;
    return Objects.equals(this.valid, postSendersDomains200ResponseInnerSpf.valid) &&
        Objects.equals(this.validAfter, postSendersDomains200ResponseInnerSpf.validAfter) &&
        Objects.equals(this.error, postSendersDomains200ResponseInnerSpf.error);
  }

  @Override
  public int hashCode() {
    return Objects.hash(valid, validAfter, error);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostSendersDomains200ResponseInnerSpf {\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("    validAfter: ").append(toIndentedString(validAfter)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

