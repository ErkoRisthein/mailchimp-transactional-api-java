/*
 * Mailchimp Transactional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.model.PostMessagesInfo200ResponseSmtpEventsInner;
import io.github.erkoristhein.mailchimp.model.PostMessagesSearch200ResponseInnerClicksDetailInner;
import io.github.erkoristhein.mailchimp.model.PostMessagesSearch200ResponseInnerOpensDetailInner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * the information for the message
 */
@JsonPropertyOrder({
  PostMessagesInfo200Response.JSON_PROPERTY_TS,
  PostMessagesInfo200Response.JSON_PROPERTY_ID,
  PostMessagesInfo200Response.JSON_PROPERTY_SENDER,
  PostMessagesInfo200Response.JSON_PROPERTY_TEMPLATE,
  PostMessagesInfo200Response.JSON_PROPERTY_SUBJECT,
  PostMessagesInfo200Response.JSON_PROPERTY_EMAIL,
  PostMessagesInfo200Response.JSON_PROPERTY_TAGS,
  PostMessagesInfo200Response.JSON_PROPERTY_OPENS,
  PostMessagesInfo200Response.JSON_PROPERTY_OPENS_DETAIL,
  PostMessagesInfo200Response.JSON_PROPERTY_CLICKS,
  PostMessagesInfo200Response.JSON_PROPERTY_CLICKS_DETAIL,
  PostMessagesInfo200Response.JSON_PROPERTY_STATE,
  PostMessagesInfo200Response.JSON_PROPERTY_METADATA,
  PostMessagesInfo200Response.JSON_PROPERTY_SMTP_EVENTS
})
@JsonTypeName("postMessagesInfo_200_response")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-19T14:58:48.420021+02:00[Europe/Tallinn]")
public class PostMessagesInfo200Response {
  public static final String JSON_PROPERTY_TS = "ts";
  private Integer ts;

  public static final String JSON_PROPERTY_ID = "_id";
  private String id;

  public static final String JSON_PROPERTY_SENDER = "sender";
  private String sender;

  public static final String JSON_PROPERTY_TEMPLATE = "template";
  private String template;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private String subject;

  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<String> tags;

  public static final String JSON_PROPERTY_OPENS = "opens";
  private Integer opens;

  public static final String JSON_PROPERTY_OPENS_DETAIL = "opens_detail";
  private List<PostMessagesSearch200ResponseInnerOpensDetailInner> opensDetail;

  public static final String JSON_PROPERTY_CLICKS = "clicks";
  private Integer clicks;

  public static final String JSON_PROPERTY_CLICKS_DETAIL = "clicks_detail";
  private List<PostMessagesSearch200ResponseInnerClicksDetailInner> clicksDetail;

  /**
   * sending status of this message
   */
  public enum StateEnum {
    SENT("sent"),
    
    BOUNCED("bounced"),
    
    REJECTED("rejected");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATE = "state";
  private StateEnum state;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private Object metadata;

  public static final String JSON_PROPERTY_SMTP_EVENTS = "smtp_events";
  private List<PostMessagesInfo200ResponseSmtpEventsInner> smtpEvents;

  public PostMessagesInfo200Response() {
  }

  public PostMessagesInfo200Response ts(Integer ts) {
    
    this.ts = ts;
    return this;
  }

   /**
   * the Unix timestamp from when this message was sent
   * @return ts
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getTs() {
    return ts;
  }


  @JsonProperty(JSON_PROPERTY_TS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTs(Integer ts) {
    this.ts = ts;
  }


  public PostMessagesInfo200Response id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * the message&#39;s unique id
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public PostMessagesInfo200Response sender(String sender) {
    
    this.sender = sender;
    return this;
  }

   /**
   * the email address of the sender
   * @return sender
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSender() {
    return sender;
  }


  @JsonProperty(JSON_PROPERTY_SENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSender(String sender) {
    this.sender = sender;
  }


  public PostMessagesInfo200Response template(String template) {
    
    this.template = template;
    return this;
  }

   /**
   * the unique name of the template used, if any
   * @return template
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTemplate() {
    return template;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemplate(String template) {
    this.template = template;
  }


  public PostMessagesInfo200Response subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * the message&#39;s subject line
   * @return subject
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubject(String subject) {
    this.subject = subject;
  }


  public PostMessagesInfo200Response email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * the recipient email address
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public PostMessagesInfo200Response tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public PostMessagesInfo200Response addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * list of tags on this message
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public PostMessagesInfo200Response opens(Integer opens) {
    
    this.opens = opens;
    return this;
  }

   /**
   * how many times has this message been opened
   * @return opens
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOpens() {
    return opens;
  }


  @JsonProperty(JSON_PROPERTY_OPENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpens(Integer opens) {
    this.opens = opens;
  }


  public PostMessagesInfo200Response opensDetail(List<PostMessagesSearch200ResponseInnerOpensDetailInner> opensDetail) {
    
    this.opensDetail = opensDetail;
    return this;
  }

  public PostMessagesInfo200Response addOpensDetailItem(PostMessagesSearch200ResponseInnerOpensDetailInner opensDetailItem) {
    if (this.opensDetail == null) {
      this.opensDetail = new ArrayList<>();
    }
    this.opensDetail.add(opensDetailItem);
    return this;
  }

   /**
   * list of individual opens for the message
   * @return opensDetail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OPENS_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PostMessagesSearch200ResponseInnerOpensDetailInner> getOpensDetail() {
    return opensDetail;
  }


  @JsonProperty(JSON_PROPERTY_OPENS_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpensDetail(List<PostMessagesSearch200ResponseInnerOpensDetailInner> opensDetail) {
    this.opensDetail = opensDetail;
  }


  public PostMessagesInfo200Response clicks(Integer clicks) {
    
    this.clicks = clicks;
    return this;
  }

   /**
   * how many times has a link been clicked in this message
   * @return clicks
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getClicks() {
    return clicks;
  }


  @JsonProperty(JSON_PROPERTY_CLICKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClicks(Integer clicks) {
    this.clicks = clicks;
  }


  public PostMessagesInfo200Response clicksDetail(List<PostMessagesSearch200ResponseInnerClicksDetailInner> clicksDetail) {
    
    this.clicksDetail = clicksDetail;
    return this;
  }

  public PostMessagesInfo200Response addClicksDetailItem(PostMessagesSearch200ResponseInnerClicksDetailInner clicksDetailItem) {
    if (this.clicksDetail == null) {
      this.clicksDetail = new ArrayList<>();
    }
    this.clicksDetail.add(clicksDetailItem);
    return this;
  }

   /**
   * list of individual clicks for the message
   * @return clicksDetail
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CLICKS_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PostMessagesSearch200ResponseInnerClicksDetailInner> getClicksDetail() {
    return clicksDetail;
  }


  @JsonProperty(JSON_PROPERTY_CLICKS_DETAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClicksDetail(List<PostMessagesSearch200ResponseInnerClicksDetailInner> clicksDetail) {
    this.clicksDetail = clicksDetail;
  }


  public PostMessagesInfo200Response state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * sending status of this message
   * @return state
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StateEnum getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(StateEnum state) {
    this.state = state;
  }


  public PostMessagesInfo200Response metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * any custom metadata provided when the message was sent
   * @return metadata
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  public PostMessagesInfo200Response smtpEvents(List<PostMessagesInfo200ResponseSmtpEventsInner> smtpEvents) {
    
    this.smtpEvents = smtpEvents;
    return this;
  }

  public PostMessagesInfo200Response addSmtpEventsItem(PostMessagesInfo200ResponseSmtpEventsInner smtpEventsItem) {
    if (this.smtpEvents == null) {
      this.smtpEvents = new ArrayList<>();
    }
    this.smtpEvents.add(smtpEventsItem);
    return this;
  }

   /**
   * a log of up to 3 smtp events for the message
   * @return smtpEvents
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SMTP_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<PostMessagesInfo200ResponseSmtpEventsInner> getSmtpEvents() {
    return smtpEvents;
  }


  @JsonProperty(JSON_PROPERTY_SMTP_EVENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSmtpEvents(List<PostMessagesInfo200ResponseSmtpEventsInner> smtpEvents) {
    this.smtpEvents = smtpEvents;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostMessagesInfo200Response postMessagesInfo200Response = (PostMessagesInfo200Response) o;
    return Objects.equals(this.ts, postMessagesInfo200Response.ts) &&
        Objects.equals(this.id, postMessagesInfo200Response.id) &&
        Objects.equals(this.sender, postMessagesInfo200Response.sender) &&
        Objects.equals(this.template, postMessagesInfo200Response.template) &&
        Objects.equals(this.subject, postMessagesInfo200Response.subject) &&
        Objects.equals(this.email, postMessagesInfo200Response.email) &&
        Objects.equals(this.tags, postMessagesInfo200Response.tags) &&
        Objects.equals(this.opens, postMessagesInfo200Response.opens) &&
        Objects.equals(this.opensDetail, postMessagesInfo200Response.opensDetail) &&
        Objects.equals(this.clicks, postMessagesInfo200Response.clicks) &&
        Objects.equals(this.clicksDetail, postMessagesInfo200Response.clicksDetail) &&
        Objects.equals(this.state, postMessagesInfo200Response.state) &&
        Objects.equals(this.metadata, postMessagesInfo200Response.metadata) &&
        Objects.equals(this.smtpEvents, postMessagesInfo200Response.smtpEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ts, id, sender, template, subject, email, tags, opens, opensDetail, clicks, clicksDetail, state, metadata, smtpEvents);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostMessagesInfo200Response {\n");
    sb.append("    ts: ").append(toIndentedString(ts)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    opens: ").append(toIndentedString(opens)).append("\n");
    sb.append("    opensDetail: ").append(toIndentedString(opensDetail)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    clicksDetail: ").append(toIndentedString(clicksDetail)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    smtpEvents: ").append(toIndentedString(smtpEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

