/*
 * Mailchimp Transactional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.api;

import io.github.erkoristhein.mailchimp.model.PostExportsActivity200Response;
import io.github.erkoristhein.mailchimp.model.PostExportsActivityRequest;
import io.github.erkoristhein.mailchimp.model.PostExportsInfo200Response;
import io.github.erkoristhein.mailchimp.model.PostExportsInfoRequest;
import io.github.erkoristhein.mailchimp.model.PostExportsList200ResponseInner;
import io.github.erkoristhein.mailchimp.model.PostExportsListRequest;
import io.github.erkoristhein.mailchimp.model.PostExportsRejects200Response;
import io.github.erkoristhein.mailchimp.model.PostExportsRejectsRequest;
import io.github.erkoristhein.mailchimp.model.PostExportsWhitelist200Response;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExportsApi
 */
@Ignore
public class ExportsApiTest {

    private final ExportsApi api = new ExportsApi();

    
    /**
     * Export activity history
     *
     * Begins an export of your activity history. The activity will be exported to a zip archive containing a single file named activity.csv in the same format as you would be able to export from your account&#39;s activity view. It includes the following fields: Date, Email Address, Sender, Subject, Status, Tags, Opens, Clicks, Bounce Detail. If you have configured any custom metadata fields, they will be included in the exported data.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postExportsActivityTest() {
        PostExportsActivityRequest body = null;

        PostExportsActivity200Response response = api.postExportsActivity(body);

        // TODO: test validations
    }
    
    /**
     * Export Allowlist
     *
     * Begins an export of your rejection allowlist. The allowlist will be exported to a zip archive containing a single file named allowlist.csv that includes the following fields: email, detail, created_at.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postExportsAllowlistTest() {
        PostExportsRejectsRequest body = null;

        PostExportsWhitelist200Response response = api.postExportsAllowlist(body);

        // TODO: test validations
    }
    
    /**
     * View export info
     *
     * Returns information about an export job. If the export job&#39;s state is &#39;complete&#39;, the returned data will include a URL you can use to fetch the results. Every export job produces a zip archive, but the format of the archive is distinct for each job type. The api calls that initiate exports include more details about the output format for that job type.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postExportsInfoTest() {
        PostExportsInfoRequest body = null;

        PostExportsInfo200Response response = api.postExportsInfo(body);

        // TODO: test validations
    }
    
    /**
     * List exports
     *
     * Returns a list of your exports.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postExportsListTest() {
        PostExportsListRequest body = null;

        List<PostExportsList200ResponseInner> response = api.postExportsList(body);

        // TODO: test validations
    }
    
    /**
     * Export denylist
     *
     * Begins an export of your rejection denylist. The denylist will be exported to a zip archive containing a single file named rejects.csv that includes the following fields: email, reason, detail, created_at, expires_at, last_event_at, expires_at.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postExportsRejectsTest() {
        PostExportsRejectsRequest body = null;

        PostExportsRejects200Response response = api.postExportsRejects(body);

        // TODO: test validations
    }
    
    /**
     * Export Allowlist
     *
     * Begins an export of your rejection allowlist. The allowlist will be exported to a zip archive containing a single file named allowlist.csv that includes the following fields: email, detail, created_at.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postExportsWhitelistTest() {
        PostExportsRejectsRequest body = null;

        PostExportsWhitelist200Response response = api.postExportsWhitelist(body);

        // TODO: test validations
    }
    
}
