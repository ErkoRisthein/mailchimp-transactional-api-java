/*
 * Mailchimp Transactional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.api;

import io.github.erkoristhein.mailchimp.model.PostSendersTimeSeries200ResponseInner;
import io.github.erkoristhein.mailchimp.model.PostTemplatesAdd200Response;
import io.github.erkoristhein.mailchimp.model.PostTemplatesAddRequest;
import io.github.erkoristhein.mailchimp.model.PostTemplatesDelete200Response;
import io.github.erkoristhein.mailchimp.model.PostTemplatesInfo200Response;
import io.github.erkoristhein.mailchimp.model.PostTemplatesInfoRequest;
import io.github.erkoristhein.mailchimp.model.PostTemplatesList200ResponseInner;
import io.github.erkoristhein.mailchimp.model.PostTemplatesListRequest;
import io.github.erkoristhein.mailchimp.model.PostTemplatesPublish200Response;
import io.github.erkoristhein.mailchimp.model.PostTemplatesRender200Response;
import io.github.erkoristhein.mailchimp.model.PostTemplatesRenderRequest;
import io.github.erkoristhein.mailchimp.model.PostTemplatesTimeSeriesRequest;
import io.github.erkoristhein.mailchimp.model.PostTemplatesUpdate200Response;
import io.github.erkoristhein.mailchimp.model.PostTemplatesUpdateRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TemplatesApi
 */
@Ignore
public class TemplatesApiTest {

    private final TemplatesApi api = new TemplatesApi();

    
    /**
     * Add template
     *
     * Add a new template.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postTemplatesAddTest() {
        PostTemplatesAddRequest body = null;

        PostTemplatesAdd200Response response = api.postTemplatesAdd(body);

        // TODO: test validations
    }
    
    /**
     * Delete template
     *
     * Delete a template.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postTemplatesDeleteTest() {
        PostTemplatesInfoRequest body = null;

        PostTemplatesDelete200Response response = api.postTemplatesDelete(body);

        // TODO: test validations
    }
    
    /**
     * Get template info
     *
     * Get the information for an existing template.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postTemplatesInfoTest() {
        PostTemplatesInfoRequest body = null;

        PostTemplatesInfo200Response response = api.postTemplatesInfo(body);

        // TODO: test validations
    }
    
    /**
     * List templates
     *
     * Return a list of all the templates available to this user.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postTemplatesListTest() {
        PostTemplatesListRequest body = null;

        List<PostTemplatesList200ResponseInner> response = api.postTemplatesList(body);

        // TODO: test validations
    }
    
    /**
     * Publish template content
     *
     * Publish the content for the template. Any new messages sent using this template will start using the content that was previously in draft.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postTemplatesPublishTest() {
        PostTemplatesInfoRequest body = null;

        PostTemplatesPublish200Response response = api.postTemplatesPublish(body);

        // TODO: test validations
    }
    
    /**
     * Render html template
     *
     * Inject content and optionally merge fields into a template, returning the HTML that results.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postTemplatesRenderTest() {
        PostTemplatesRenderRequest body = null;

        PostTemplatesRender200Response response = api.postTemplatesRender(body);

        // TODO: test validations
    }
    
    /**
     * Get template history
     *
     * Return the recent history (hourly stats for the last 30 days) for a template.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postTemplatesTimeSeriesTest() {
        PostTemplatesTimeSeriesRequest body = null;

        List<PostSendersTimeSeries200ResponseInner> response = api.postTemplatesTimeSeries(body);

        // TODO: test validations
    }
    
    /**
     * Update template
     *
     * Update the code for an existing template. If null is provided for any fields, the values will remain unchanged.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postTemplatesUpdateTest() {
        PostTemplatesUpdateRequest body = null;

        PostTemplatesUpdate200Response response = api.postTemplatesUpdate(body);

        // TODO: test validations
    }
    
}
