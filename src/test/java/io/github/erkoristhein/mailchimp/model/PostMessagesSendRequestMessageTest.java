/*
 * Mailchimp Transactional API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.55
 * Contact: apihelp@mailchimp.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.erkoristhein.mailchimp.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.erkoristhein.mailchimp.model.PostMessagesSendRequestMessageAttachmentsInner;
import io.github.erkoristhein.mailchimp.model.PostMessagesSendRequestMessageGlobalMergeVarsInner;
import io.github.erkoristhein.mailchimp.model.PostMessagesSendRequestMessageImagesInner;
import io.github.erkoristhein.mailchimp.model.PostMessagesSendRequestMessageMergeVarsInner;
import io.github.erkoristhein.mailchimp.model.PostMessagesSendRequestMessageMetadata;
import io.github.erkoristhein.mailchimp.model.PostMessagesSendRequestMessageRecipientMetadataInner;
import io.github.erkoristhein.mailchimp.model.PostMessagesSendRequestMessageToInner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

/**
 * Model tests for PostMessagesSendRequestMessage
 */
public class PostMessagesSendRequestMessageTest {
    private final PostMessagesSendRequestMessage model = new PostMessagesSendRequestMessage();

    /**
     * Model tests for PostMessagesSendRequestMessage
     */
    @Test
    public void testPostMessagesSendRequestMessage() {
        // TODO: test PostMessagesSendRequestMessage
    }

    /**
     * Test the property 'html'
     */
    @Test
    public void htmlTest() {
        // TODO: test html
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'subject'
     */
    @Test
    public void subjectTest() {
        // TODO: test subject
    }

    /**
     * Test the property 'fromEmail'
     */
    @Test
    public void fromEmailTest() {
        // TODO: test fromEmail
    }

    /**
     * Test the property 'fromName'
     */
    @Test
    public void fromNameTest() {
        // TODO: test fromName
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        // TODO: test to
    }

    /**
     * Test the property 'headers'
     */
    @Test
    public void headersTest() {
        // TODO: test headers
    }

    /**
     * Test the property 'important'
     */
    @Test
    public void importantTest() {
        // TODO: test important
    }

    /**
     * Test the property 'trackOpens'
     */
    @Test
    public void trackOpensTest() {
        // TODO: test trackOpens
    }

    /**
     * Test the property 'trackClicks'
     */
    @Test
    public void trackClicksTest() {
        // TODO: test trackClicks
    }

    /**
     * Test the property 'autoText'
     */
    @Test
    public void autoTextTest() {
        // TODO: test autoText
    }

    /**
     * Test the property 'autoHtml'
     */
    @Test
    public void autoHtmlTest() {
        // TODO: test autoHtml
    }

    /**
     * Test the property 'inlineCss'
     */
    @Test
    public void inlineCssTest() {
        // TODO: test inlineCss
    }

    /**
     * Test the property 'urlStripQs'
     */
    @Test
    public void urlStripQsTest() {
        // TODO: test urlStripQs
    }

    /**
     * Test the property 'preserveRecipients'
     */
    @Test
    public void preserveRecipientsTest() {
        // TODO: test preserveRecipients
    }

    /**
     * Test the property 'viewContentLink'
     */
    @Test
    public void viewContentLinkTest() {
        // TODO: test viewContentLink
    }

    /**
     * Test the property 'bccAddress'
     */
    @Test
    public void bccAddressTest() {
        // TODO: test bccAddress
    }

    /**
     * Test the property 'trackingDomain'
     */
    @Test
    public void trackingDomainTest() {
        // TODO: test trackingDomain
    }

    /**
     * Test the property 'signingDomain'
     */
    @Test
    public void signingDomainTest() {
        // TODO: test signingDomain
    }

    /**
     * Test the property 'returnPathDomain'
     */
    @Test
    public void returnPathDomainTest() {
        // TODO: test returnPathDomain
    }

    /**
     * Test the property 'merge'
     */
    @Test
    public void mergeTest() {
        // TODO: test merge
    }

    /**
     * Test the property 'mergeLanguage'
     */
    @Test
    public void mergeLanguageTest() {
        // TODO: test mergeLanguage
    }

    /**
     * Test the property 'globalMergeVars'
     */
    @Test
    public void globalMergeVarsTest() {
        // TODO: test globalMergeVars
    }

    /**
     * Test the property 'mergeVars'
     */
    @Test
    public void mergeVarsTest() {
        // TODO: test mergeVars
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'subaccount'
     */
    @Test
    public void subaccountTest() {
        // TODO: test subaccount
    }

    /**
     * Test the property 'googleAnalyticsDomains'
     */
    @Test
    public void googleAnalyticsDomainsTest() {
        // TODO: test googleAnalyticsDomains
    }

    /**
     * Test the property 'googleAnalyticsCampaign'
     */
    @Test
    public void googleAnalyticsCampaignTest() {
        // TODO: test googleAnalyticsCampaign
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'recipientMetadata'
     */
    @Test
    public void recipientMetadataTest() {
        // TODO: test recipientMetadata
    }

    /**
     * Test the property 'attachments'
     */
    @Test
    public void attachmentsTest() {
        // TODO: test attachments
    }

    /**
     * Test the property 'images'
     */
    @Test
    public void imagesTest() {
        // TODO: test images
    }

}
